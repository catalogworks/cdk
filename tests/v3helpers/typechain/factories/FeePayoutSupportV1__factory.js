"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeePayoutSupportV1__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_royaltyEngine",
                type: "address",
            },
            {
                internalType: "address",
                name: "_protocolFeeSettings",
                type: "address",
            },
            {
                internalType: "address",
                name: "_wethAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_registrarAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "tokenContract",
                type: "address",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "recipient",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "RoyaltyPayout",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_tokenContract",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_tokenId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_amount",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_payoutCurrency",
                type: "address",
            },
        ],
        name: "_handleRoyaltyEnginePayout",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "registrar",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_royaltyEngine",
                type: "address",
            },
        ],
        name: "setRoyaltyEngineAddress",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60e06040523480156200001157600080fd5b506040516200128238038062001282833981016040819052620000349162000087565b6001600160a01b03918216608052600080546001600160a01b0319169483169490941790935590811660a0521660c052620000e4565b80516001600160a01b03811681146200008257600080fd5b919050565b600080600080608085870312156200009e57600080fd5b620000a9856200006a565b9350620000b9602086016200006a565b9250620000c9604086016200006a565b9150620000d9606086016200006a565b905092959194509250565b60805160a05160c0516111646200011e60003960008181604b01526104050152600050506000818161072701526107bf01526111646000f3fe6080604052600436106100345760003560e01c80632b20e397146100395780639128c22c14610097578063b249bb30146100b8575b600080fd5b34801561004557600080fd5b5061006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100aa6100a5366004610d8c565b6100da565b60405190815260200161008e565b3480156100c457600080fd5b506100d86100d3366004610dd6565b6103ed565b005b6000333014610170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f5f68616e646c65526f79616c7479456e67696e655061796f7574206f6e6c792060448201527f73656c662063616c6c61626c650000000000000000000000000000000000000060648201526084015b60405180910390fd5b600080546040517ff533b80200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88811660048301526024820188905260448201879052869392839291169063f533b802906064016000604051808303816000875af11580156101f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261023b9190810190610f00565b9150915060005b82518110156103e05781818151811061025d5761025d610fc5565b60200260200101518410156102ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f696e736f6c76656e7400000000000000000000000000000000000000000000006044820152606401610167565b61030d8382815181106102e3576102e3610fc5565b60200260200101518383815181106102fd576102fd610fc5565b60200260200101518860006105af565b82818151811061031f5761031f610fc5565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16888a73ffffffffffffffffffffffffffffffffffffffff167f866e6ef8682ddf5f1025e64dfdb45527077f7be70fa9ef680b7ffd8cf4ab9c5085858151811061038857610388610fc5565b602002602001015160405161039f91815260200190565b60405180910390a48181815181106103b9576103b9610fc5565b6020026020010151846103cc9190611023565b9350806103d88161103a565b915050610242565b5091979650505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146104b2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f736574526f79616c7479456e67696e6541646472657373206f6e6c792072656760448201527f69737472617200000000000000000000000000000000000000000000000000006064820152608401610167565b6104dc817fcb23f81600000000000000000000000000000000000000000000000000000000610818565b610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f736574526f79616c7479456e67696e6541646472657373206d757374206d617460448201527f63682049526f79616c7479456e67696e65563120696e746572666163650000006064820152608401610167565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8215806105d0575073ffffffffffffffffffffffffffffffffffffffff8416155b156105da57610812565b73ffffffffffffffffffffffffffffffffffffffff82166107f15782471015610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5f68616e646c654f7574676f696e675472616e7366657220696e736f6c76656e60448201527f74000000000000000000000000000000000000000000000000000000000000006064820152608401610167565b600081158061069357505a82115b61069d578161069f565b5a5b604080516000808252602082019283905292935073ffffffffffffffffffffffffffffffffffffffff881691849188916106d9919061109f565b600060405180830381858888f193505050503d8060008114610717576040519150601f19603f3d011682016040523d82523d6000602084013e61071c565b606091505b50509050806107ea577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0866040518263ffffffff1660e01b81526004016000604051808303818588803b15801561078d57600080fd5b505af11580156107a1573d6000803e3d6000fd5b506107ea93505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691508890508761083d565b5050610812565b61081273ffffffffffffffffffffffffffffffffffffffff8316858561083d565b50505050565b6000610823836108cf565b801561083457506108348383610933565b90505b92915050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526108ca908490610a6f565b505050565b60006108fb827f01ffc9a700000000000000000000000000000000000000000000000000000000610933565b8015610837575061092c827fffffffff00000000000000000000000000000000000000000000000000000000610933565b1592915050565b604080517fffffffff00000000000000000000000000000000000000000000000000000000831660248083019190915282518083039091018152604490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a7000000000000000000000000000000000000000000000000000000001790529051600091908290819073ffffffffffffffffffffffffffffffffffffffff871690617530906109ed90869061109f565b6000604051808303818686fa925050503d8060008114610a29576040519150601f19603f3d011682016040523d82523d6000602084013e610a2e565b606091505b5091509150602081511015610a495760009350505050610837565b818015610a65575080806020019051810190610a6591906110bb565b9695505050505050565b6000610ad1826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610b7b9092919063ffffffff16565b8051909150156108ca5780806020019051810190610aef91906110bb565b6108ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610167565b6060610b8a8484600085610b94565b90505b9392505050565b606082471015610c26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610167565b843b610c8e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610167565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610cb7919061109f565b60006040518083038185875af1925050503d8060008114610cf4576040519150601f19603f3d011682016040523d82523d6000602084013e610cf9565b606091505b5091509150610d09828286610d14565b979650505050505050565b60608315610d23575081610b8d565b825115610d335782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161016791906110dd565b73ffffffffffffffffffffffffffffffffffffffff81168114610d8957600080fd5b50565b60008060008060808587031215610da257600080fd5b8435610dad81610d67565b935060208501359250604085013591506060850135610dcb81610d67565b939692955090935050565b600060208284031215610de857600080fd5b8135610b8d81610d67565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e6957610e69610df3565b604052919050565b600067ffffffffffffffff821115610e8b57610e8b610df3565b5060051b60200190565b600082601f830112610ea657600080fd5b81516020610ebb610eb683610e71565b610e22565b82815260059290921b84018101918181019086841115610eda57600080fd5b8286015b84811015610ef55780518352918301918301610ede565b509695505050505050565b60008060408385031215610f1357600080fd5b825167ffffffffffffffff80821115610f2b57600080fd5b818501915085601f830112610f3f57600080fd5b81516020610f4f610eb683610e71565b82815260059290921b84018101918181019089841115610f6e57600080fd5b948201945b83861015610f95578551610f8681610d67565b82529482019490820190610f73565b91880151919650909350505080821115610fae57600080fd5b50610fbb85828601610e95565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561103557611035610ff4565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561106c5761106c610ff4565b5060010190565b60005b8381101561108e578181015183820152602001611076565b838111156108125750506000910152565b600082516110b1818460208701611073565b9190910192915050565b6000602082840312156110cd57600080fd5b81518015158114610b8d57600080fd5b60208152600082518060208401526110fc816040850160208701611073565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220f2e4268d1e4859b49de2d7e4af4abbe2148284b88b3eb5c6bda9b0f24810e54e64736f6c634300080a0033";
const isSuperArgs = (xs) => xs.length > 1;
class FeePayoutSupportV1__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_royaltyEngine, _protocolFeeSettings, _wethAddress, _registrarAddress, overrides) {
        return super.deploy(_royaltyEngine, _protocolFeeSettings, _wethAddress, _registrarAddress, overrides || {});
    }
    getDeployTransaction(_royaltyEngine, _protocolFeeSettings, _wethAddress, _registrarAddress, overrides) {
        return super.getDeployTransaction(_royaltyEngine, _protocolFeeSettings, _wethAddress, _registrarAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FeePayoutSupportV1__factory = FeePayoutSupportV1__factory;
FeePayoutSupportV1__factory.bytecode = _bytecode;
FeePayoutSupportV1__factory.abi = _abi;
//# sourceMappingURL=FeePayoutSupportV1__factory.js.map