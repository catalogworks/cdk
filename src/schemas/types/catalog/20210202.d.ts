/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This schema describes version 20210202 of the Catalog Metadata Standard
 */
export interface Catalog20210202 {
  /**
   * Descriptive metadata properties of a Catalog record
   */
  body: {
    /**
     * Calendar version of the schema so that consumers can correctly parse the json
     */
    version: "catalog-20210202";
    /**
     * Title of the track
     */
    title: string;
    /**
     * Name of the artist who created the track
     */
    artist: string;
    /**
     * An optional property for describing the track
     */
    notes: string | null;
    /**
     * Length of the audio file in seconds (must be > 1ms)
     */
    duration: number;
    /**
     * MimeType of the audio file. Only lossless formats (aif, wav, flac) are supported.
     */
    mimeType: "audio/x-aiff" | "audio/aiff" | "audio/wav" | "audio/x-wav" | "audio/flac";
    /**
     * The place which the track appears in its project (e.g. track 4 off an album)
     */
    trackNumber: number | null;
    /**
     * Describes the body of work the record is a part of (e.g. an album, EP, or compilation)
     */
    project: {
      /**
       * The name of the project this record is on
       */
      title: string;
      /**
       * Artwork for the project (e.g. an album cover)
       */
      artwork: Artwork | null;
      [k: string]: unknown;
    } | null;
    /**
     * Cover art for the record
     */
    artwork: {
      /**
       * Denotes if the artwork is a separate NFT or is embedded into the Catalog record
       */
      isNft: boolean;
      /**
       * Information about how to display the artwork
       */
      info: {
        /**
         * Pointer to the artwork
         */
        uri: string;
        /**
         * MimeType of the artwork
         */
        mimeType: "image/jpeg" | "image/pjpeg" | "image/png";
      } | null;
      /**
       * Information about how to find the NFT
       */
      nft: {
        /**
         * Ethereum network that the artwork NFT exists on
         */
        chainId: number;
        /**
         * Address of the factory contract that was used to mint the artwork NFT
         */
        contractAddress: string;
        /**
         * Token ID of the artwork NFT
         */
        tokenId: number;
      } | null;
    };
    visualizer: {
      /**
       * Denotes if the visualizer is a separate NFT or is embedded into the Catalog record
       */
      isNft: boolean;
      /**
       * Information about how to display the visualizer
       */
      info: {
        /**
         * Pointer to the visualizer
         */
        uri: string;
        /**
         * MimeType of the visualizer
         */
        mimeType: string;
        [k: string]: unknown;
      } | null;
      /**
       * Information about how to find the NFT
       */
      nft: {
        /**
         * Ethereum network that the artwork NFT exists on
         */
        chainId: number;
        /**
         * Address of the factory contract that was used to mint the visualizer NFT
         */
        contractAddress: string;
        /**
         * Token ID of the artwork NFT
         */
        tokenId: number;
      } | null;
      [k: string]: unknown;
    } | null;
  };
  /**
   * Information used to verify the authenticity of the record
   */
  origin: {
    /**
     * Algorithm used to sign the metadata body
     */
    algorithm: string;
    /**
     * Encoding used in the signature
     */
    encoding: string;
    /**
     * Public key used to verify the record's origin signature
     */
    publicKey: string;
    /**
     * The result of the public key's corresponding private key signing the body of the record metadata. We sign the output of JSON.stringify(body), where body is the alphabetized and minified JSON object retrieved from the body key in the record's metadata.
     */
    signature: string;
  } | null;
}
export interface Artwork {
  /**
   * Denotes if the artwork is a separate NFT or is embedded into the Catalog record
   */
  isNft: boolean;
  /**
   * Information about how to display the artwork
   */
  info: {
    /**
     * Pointer to the artwork
     */
    uri: string;
    /**
     * MimeType of the artwork
     */
    mimeType: "image/jpeg" | "image/pjpeg" | "image/png";
  } | null;
  /**
   * Information about how to find the NFT
   */
  nft: {
    /**
     * Ethereum network that the artwork NFT exists on
     */
    chainId: number;
    /**
     * Address of the factory contract that was used to mint the artwork NFT
     */
    contractAddress: string;
    /**
     * Token ID of the artwork NFT
     */
    tokenId: number;
  } | null;
}
